---
layout:     post
title:      "Brief Introduction to Sitewhere"
subtitle:   "小小入门"
date:       2016-03-28 10:42:00
author:     "Jerin"
header-img: "img/tag-bg.jpg"
catalog: true
tags:
    - 技术
---

# 前言

IOT(Internet OfThings)也就是我们常说的物联网，实际上就是用互联网实现各种设备间的通信，使得这些物品组成一个或大或小的网络。其目的是实现设备的统筹管理以更好地服务于人类，实现我们各种需求。可以认为是互联网的对象从人到物的一个转换。

而sitewhere则是一个开源的物联网平台，它帮我们搭起了一个系统以方便我们实现数据的读取储存，程序的运行。

---

## 物联网服务器平台​

1.作为类似一个处理设备数据的控制器的应用。服务器可以装在本地机器上，也可以跑在云端，每天可以处理炒鸡炒鸡多的事件。

2.可以储存设备的数据，过往的设备事件数据也是不删的​，再多事件也不删。比如管理倒闸的话，A车进，A车出，B车进，这种历史记录都是永远存在的。

3.提供给服务供应商接口，允许第三方定制扩展。这里的服务供应商就是指给客户提供服务的人，也就是我们这些写软件的。

4.可以轻松地注册新设备，并且实现设备和sitewhere之间的接受发送数据​。系统还有一系列接口可以让你自己增加沟通协议，编码计划和配置设定。

5.提供了一个HTML5 ​管理应用，使得系统的数据可以一种更好理解的方式来查看和操作。管理的app和第三方app都可以通过REST接口与sitewhere进行交互。

## 设备管理​

1.提供了一套完整的设备管理模型。

2.提供了设备数据的规范模型。

3.把设备和外部事物或者人联系起来​，比如一个校徽，就跟戴校徽的我联系起来，这样方便追踪事件。A车就跟A车车牌联系起来，发现这个车牌，就知道这辆车进去或者出去了。

## 集成

1.集成了第三方的工作框架，如​ MuleAnyPoint，Salesforce，Twilio。

2.用java的话，几行代码就能利用REST[注1]服务实现与sitewhere的交互。​

3.通过balabala建立的信息保护机制​。



[注1]​REST(Representational StateTransfer)即表述性状态传递，描述了一个架构样式的网络系统，比如web 应用程序。可以把它理解为一种软件架构风格，而符合这个风格的程序就是RESTful。

即，REST是一个框架，这个框架的实现就是RESTful。​

## 后记

文章都是老博客搬过来的。本来打算一边学习Sitewhere，一边更新，就当学习笔记的。后来手头事情比较多，Sitewhere端做得比较少，也不怎么看了。